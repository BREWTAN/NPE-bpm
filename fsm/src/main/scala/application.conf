
akka {
  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
  }
  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "127.0.0.1"
    }
  }
 
  cluster {
    seed-nodes = [
      "akka.tcp://PECluster@127.0.0.1:2551"
      #,"akka.tcp://PECluster@127.0.0.1:2552"
      #,"akka.tcp://PECluster@127.0.0.1:2553"
      ]
  
    	auto-down-unreachable-after = 10s
  } 
}
akka.cluster.roles = [compute,viewer]

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
}  
fsm-thread-pool-dispatcher{
	type = Dispatcher
   executor = "fork-join-executor"
  # Configuration for the fork join pool
  fork-join-executor {
    # Min number of threads to cap factor-based parallelism number to
    parallelism-min = 80
    # Parallelism (threads) ... ceil(available processors * factor)
    parallelism-factor = 20.0
    # Max number of threads to cap factor-based parallelism number to
    parallelism-max = 300
  }
  throughput = 1
}

ask-thread-pool-dispatcher{
	type = Dispatcher
   executor = "fork-join-executor"
  fork-join-executor {
    # Min number of threads to cap factor-based parallelism number to
    parallelism-min = 50
    # Parallelism (threads) ... ceil(available processors * factor)
    parallelism-factor = 20.0
    # Max number of threads to cap factor-based parallelism number to
    parallelism-max = 300
  }
  throughput = 1
}

akka.cluster.use-dispatcher = cluster-dispatcher
 
cluster-dispatcher {
  type = "Dispatcher"
  executor = "fork-join-executor"
  fork-join-executor {
    parallelism-min = 8
    parallelism-max = 20
  }
}

akka {
    loglevel = INFO
    actor {
      default-dispatcher = {
        fork-join-executor {
          parallelism-factor = 1.0
          parallelism-max = 20
        }
      }
    }
  }


akka.actor.deployment{
	/fsm {
	    dispatcher = fsm-thread-pool-dispatcher
  	}
  	
 	"/fsm/*" {
	    dispatcher = fsm-thread-pool-dispatcher
  	}
	
	/fsm/definitionstore{
	}
 	/fsm/statestores {
    	router = consistent-hashing-group
    	nr-of-instances = 20
    	routees.paths = ["/user/statestores"]
    	
    	cluster {
        	enabled = on
        	allow-local-routees = on
        	#max-nr-of-instances-per-node = 20
        	use-role = compute
		}
	}
	/fsm/convergers {
    	router = consistent-hashing-group
    	nr-of-instances = 20
    	routees.paths = ["/user/convergers"]
    	cluster {
        	enabled = on
        	allow-local-routees = on
        	#max-nr-of-instances-per-node = 20
        	use-role = compute
		}
	}
	/fsm/cconvergers {
    	router = consistent-hashing-group
    	nr-of-instances = 20
    	routees.paths = ["/user/cconvergers"]
    	cluster {
        	enabled = on
        	allow-local-routees = on
        	#max-nr-of-instances-per-node = 20
        	use-role = compute
		}
	}
  /fsm/submitor {
	  router = consistent-hashing-group
      nr-of-instances = 20
      routees.paths = ["/user/submitor"]
      cluster {
        	enabled = on
        	allow-local-routees = on
        	#max-nr-of-instances-per-node =20
        	use-role = compute
		}
	}
  /fsm/transitionworker {
	  router = consistent-hashing-group
      nr-of-instances = 20
      routees.paths = ["/user/transitionworker"]
      cluster {
        	enabled = on
        	allow-local-routees = on
        	#max-nr-of-instances-per-node = 20
        	use-role = compute
		}
	}
  /fsm/queues {
	  router = consistent-hashing-group
      nr-of-instances = 20
      routees.paths = ["/user/queues"]
      cluster {
        	enabled = on
        	allow-local-routees = on
        	#max-nr-of-instances-per-node = 20
        	use-role = compute
		}
	}
	/fsm/queuesall {
	  router = consistent-hashing-group
      nr-of-instances = 20
      routees.paths = ["/user/queues*"]
      cluster {
        	enabled = on
        	allow-local-routees = on
        	#max-nr-of-instances-per-node = 20
        	use-role = compute
		}
	}
  /fsm/pushs {
	  router = consistent-hashing-group
      nr-of-instances = 20
      routees.paths = ["/user/pushs"]
      cluster {
        	enabled = on
        	allow-local-routees = on
        	#max-nr-of-instances-per-node = 20
        	use-role = compute
		}
	}
	
  /fsm/terminators {
	  router = consistent-hashing-group
      nr-of-instances = 20
      routees.paths = ["/user/terminators"]

      cluster {
        	enabled = on
        	allow-local-routees = on
        	#max-nr-of-instances-per-node = 20
        	use-role = compute
		}
	}
	/fsm/params {
    router = round-robin-pool
    nr-of-instances = 5
  }
  /fsm/stats {
    router = consistent-hashing-group
    nr-of-instances = 20
    routees.paths = ["/user/stats"]
	cluster {
	    	enabled = on
	    	allow-local-routees = on
	    	#max-nr-of-instances-per-node = 1
	    	use-role = compute
		}
  }
}


tcp-async.db {
  username= npe
  password=	npe
  port = 3306
  name = npe
  pool{
	  	maxObjects = 200
  		maxIdle = 2000
  		maxQueueSize = 2000
  	}
   host = 127.0.0.1
  }
